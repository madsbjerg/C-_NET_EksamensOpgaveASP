// <auto-generated />
using System;
using BilReperationFirmaWebApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilReperationFirmaWebApp.Migrations
{
    [DbContext(typeof(BilFirmaContext))]
    [Migration("20230524160535_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignUpDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "John Doe",
                            Phonenumber = "+45 12 34 56 78",
                            SignUpDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(8757)
                        },
                        new
                        {
                            Id = -2,
                            Name = "Linse Testperson",
                            Phonenumber = "+45 87 65 43 21",
                            SignUpDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(8808)
                        },
                        new
                        {
                            Id = -3,
                            Name = "Johan Jakobsen",
                            Phonenumber = "+45 10 09 08 07",
                            SignUpDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(8812)
                        });
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Mechanic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Mechanics");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            HiringDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(9107),
                            Name = "Mechanic #1",
                            Salary = 2000.5
                        },
                        new
                        {
                            Id = -2,
                            HiringDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(9121),
                            Name = "Mechanic #2",
                            Salary = 2500.5
                        },
                        new
                        {
                            Id = -3,
                            HiringDate = new DateTime(2023, 5, 24, 18, 5, 34, 955, DateTimeKind.Local).AddTicks(9124),
                            Name = "Mechanic #3",
                            Salary = 1249.99
                        });
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int?>("MechanicId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MechanicId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CustomerId = -1,
                            IsFinished = false,
                            MechanicId = -1,
                            Price = 100.0
                        },
                        new
                        {
                            Id = -2,
                            CustomerId = -1,
                            IsFinished = false,
                            MechanicId = -2,
                            Price = 150.0
                        },
                        new
                        {
                            Id = -3,
                            CustomerId = -2,
                            IsFinished = true,
                            MechanicId = -2,
                            Price = 200.0
                        },
                        new
                        {
                            Id = -4,
                            CustomerId = -3,
                            IsFinished = true,
                            MechanicId = -2,
                            Price = 250.0
                        },
                        new
                        {
                            Id = -5,
                            CustomerId = -2,
                            IsFinished = false,
                            MechanicId = -3,
                            Price = 300.0
                        });
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.OrderType", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            OrderId = -1,
                            TypeId = -1
                        },
                        new
                        {
                            OrderId = -2,
                            TypeId = -1
                        },
                        new
                        {
                            OrderId = -2,
                            TypeId = -2
                        },
                        new
                        {
                            OrderId = -3,
                            TypeId = -3
                        },
                        new
                        {
                            OrderId = -3,
                            TypeId = -4
                        },
                        new
                        {
                            OrderId = -4,
                            TypeId = -4
                        },
                        new
                        {
                            OrderId = -5,
                            TypeId = -2
                        });
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Inspection"
                        },
                        new
                        {
                            Id = -2,
                            Description = "Oil-check"
                        },
                        new
                        {
                            Id = -3,
                            Description = "Tire Change"
                        },
                        new
                        {
                            Id = -4,
                            Description = "Battery replacement"
                        });
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Order", b =>
                {
                    b.HasOne("BilReperationFirmaWebApp.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("BilReperationFirmaWebApp.Models.Mechanic", "Mechanic")
                        .WithMany("Orders")
                        .HasForeignKey("MechanicId");

                    b.Navigation("Customer");

                    b.Navigation("Mechanic");
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.OrderType", b =>
                {
                    b.HasOne("BilReperationFirmaWebApp.Models.Order", "Order")
                        .WithMany("OrderTypes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilReperationFirmaWebApp.Models.Type", "Type")
                        .WithMany("OrderTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Mechanic", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Order", b =>
                {
                    b.Navigation("OrderTypes");
                });

            modelBuilder.Entity("BilReperationFirmaWebApp.Models.Type", b =>
                {
                    b.Navigation("OrderTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
